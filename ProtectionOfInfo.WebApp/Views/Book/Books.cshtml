@using ProtectionOfInfo.WebApp.Data.Configurations
@using ProtectionOfInfo.WebApp.ViewModels
@using ProtectionOfInfo.WebApp.ViewModels.CatalogViewModels.BookViewModels
@using ProtectionOfInfo.WebApp.Infrastructure.OperationResults
@model OperationResult<BooksViewModel>
@{
    ViewData["Title"] = "Все книги";
    ViewData["MiniTitle"] = "Список всех добавленных книг";
    ViewData["ErrorTitle"] = ViewData["MiniTitle"];
}

@if (Model != null && !Model.Ok || Model!.MetaData.Type != MetaDataType.Success)
{
    var operation = new OperationResult<object>();
    operation.MetaData = Model.MetaData;
    operation.Exception = Model.Exception;
    operation.AppendLog(Model.Logs);
    <partial name="_ErrorPartial" model='operation' />
}

@if (Model != null && Model!.Ok)
{
    var listSort = new List<NavMethodsForTablesViewModel<ParamSort>>() {
        new NavMethodsForTablesViewModel<ParamSort>()
        {
            Name = $"Сортировка по Названию книги",
            Controller = "Book",
            Action = "Sort",
            Param = new List<ParamSort>()
{
                new ParamSort("от a до я", "Name", TypeSort.OrderBy),
                new ParamSort("от я до а", "Name", TypeSort.OrderByDescending)
            }
        },
        new NavMethodsForTablesViewModel<ParamSort>()
        {
            Name = "Сортировка по Цене",
            Controller = "Book",
            Action = "Sort",
            Param = new List<ParamSort>()
{
                new ParamSort("по возрастанию", "Price", TypeSort.OrderBy),
                new ParamSort("по убыванию", "Price", TypeSort.OrderByDescending)
            }
        }
    };

    var Search = new NavMethodsForTablesViewModel<ParamSearch>()
    {
        Name = "Поиск по таблице Книги",
        Controller = "Book",
        Action = "Search",
        Param = new List<ParamSearch>()
{
            new ParamSearch("Всем полям", "All"),
            new ParamSearch("Названию книги", "Name"),
            new ParamSearch("По цене", "Price")
        }
    };

    var operation = OperationResult.CreateResult<NavMethodsForTablesViewModel>(new NavMethodsForTablesViewModel(listSort, Search));
    <partial name="_NavMethodsForTablesPartial" model='operation' />

    <div class="form-inline justify-content-center m-3">
        <div class="col-lg-3 text-center m-1">
            <label class="mt-1 mb-1" for="first_name">Максимальная цена книги (руб.)</label>
            <input type="text" class="form-control text-center mr-sm-2 mb-2 mb-sm-0" value="@Math.Round(Model.Result.MaxPrice, 2).ToString()" readonly>
        </div>
        <div class="col-lg-3 text-center m-1">
            <label class="mt-1 mb-1" for="last_name">Минимальная цена книги (руб.)</label>
            <input type="text" class="form-control text-center mr-sm-2 mb-2 mb-sm-0" value="@Math.Round(Model.Result.MinPrice, 2).ToString()" readonly>
        </div>
    </div>

    <div class="container mt-3 mb-3">
        <h2 class="text-center">@ViewData["MiniTitle"]</h2>
        <p class="text-center">Просмотр списка книг (редактирование и удаление книг)</p>

        <table class="table">
            <thead>
                <tr>
                    <th class="text-center" scope="col">#</th>
                    <th class="text-center" scope="col">@EntitiesModelsConfiguration.BookName</th>
                    <th class="text-center" scope="col">@EntitiesModelsConfiguration.BookPrice</th>
                    <th class="text-center" scope="col">Изменить</th>
                    <th class="text-center" scope="col">Удалить</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int i = 1;
                    foreach (var value in Model.Result.Books!)
                    {
                        <tr>
                            <th class="text-center" scope="row">@i.ToString()</th>
                            <td class="text-center" scope="row">@value.Name</td>
                            <td class="text-center" scope="row">@Math.Round(value.Price, 2)</td>
                            <td class="text-center" scope="row">
                                <a href="/Book/Update?id=@value.Id.ToString()" class="btn btn-primary btn-block" role="button">Изменить</a>
                            </td>
                            <td class="text-center" scope="row">
                                <a href="/Book/Delete?id=@value.Id.ToString()" class="btn btn-primary btn-block" role="button">Удалить</a>
                            </td>
                        </tr>
                        i++;
                    }
                }
            </tbody>
        </table>
    </div>
}